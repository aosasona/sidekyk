/*
 * This file was generated by gots, do not edit it manually
 * You can find the docs and source code at https://github.com/aosasona/gots
 */
	
export type PersonalityMap = {
    id: number;
    name: string;
    whitelisted_plans: string[];
};

export type WhisperModels = {
    alias: string;
    url: string;
    description: string;
    required_ram: number;
    average_size: number;
    enabled: boolean;
};

export type Sidekyk = {
    id: number;
    name: string;
    color: string;
    emoji?: string | null;
    avatar_url?: string | null;
    attitude?: string;
    personality_id: number;
    override_instruction?: string | null;
    created_at?: string;
    updated_at?: string | null;
    user_id: number;
    unix_created_at: number;
    unix_updated_at: number;
};

export type DailyLimits = {
    messages: number;
};

export type UserLimits = {
    sidekyks: number;
    max_tokens: number;
    model: string;
    daily_limits: DailyLimits;
};

export type Message = {
    message_id: number;
    conversation_id: number;
    content: string;
    is_bot: boolean;
    is_flagged: boolean;
    is_disliked: boolean | null;
    prompt_tokens: number;
    completion_tokens: number;
    third_party_id: string | null;
    created_at: string;
    updated_at: string | null;
    unix_created_at?: number;
    unix_updated_at?: number;
};

export type Conversation = {
    conversation_id: number;
    title: string;
    user_id: number;
    sidekyk_id: number;
    is_public: boolean;
    allow_training: boolean;
    share_id: string | null;
    created_at: string | null;
    updated_at: string | null;
    unix_created_at: number;
    unix_updated_at: number;
};

export type Avatar = {
    name: string;
    url: string;
    size: number;
    original_file_name: string;
};

export type GetUserResponse = {
    id: number;
    first_name: string;
    last_name: string;
    email: string;
    subscription_type: 'FREE'|'BASIC'|'PRO'|'OWN_KEY';
    is_trial: boolean;
    created_at: string;
    updated_at: string;
};

export type GetSidekykResponse = {
    user_id: number;
    sidekyk_id: number;
    name: string;
    color: string;
    emoji: string | null;
    avatar_url: string | null;
    instruction: string | null;
    personality_id: number;
    personality_name: string;
    created_at?: string;
    updated_at?: string | null;
};

export type GetSidekyksResponse = {
    user_id: number;
    sidekyks: GetSidekykResponse[];
    remaining: number;
};

export type CreateSidekykBody = {
    name: string;
    color?: string;
    emoji?: string;
    avatar_name?: string;
    avatar_url?: string;
    personality_id: number;
    instruction?: string;
};

export type CreateSidekykResponse = {
    user_id: number;
    sidekyk_id: number;
    name: string;
    color: string;
    emoji: string | null;
    avatar_url: string | null;
    instruction: string | null;
    personality_id: number;
    personality_name: string;
    created_at?: string;
    updated_at?: string | null;
};

export type ChangeEmailRequest = {
    email: string;
    password: string;
};

export type ChangePasswordRequest = {
    code: string;
    email: string;
    new_password: string;
    confirm_password: string;
};

export type UpdateUserRequest = {
    first_name: string;
    last_name: string;
};

export type SendMessageRequest = {
    conversation_id?: number;
    sidekyk_id?: number;
    message: string;
};

export type SendMessageResponse = {
    conversation_id: number;
    user_message_id: number;
    bot_message_id: number;
    sidekyk_id: number;
    completion: string;
    prompt_tokens: number;
    completion_tokens: number;
};

export type ConversationSidekykSchema = {
    sidekyk_id: number;
    name: string;
    personality_name: string;
    avatar_url?: string | null;
    emoji?: string | null;
    color: string;
    instruction: string;
    personality_id: number;
    created_at?: number | null;
    updated_at?: number | null;
};

export type LastMessage = {
    content: string;
    is_bot: boolean;
    created_at: number | null;
};

export type GetConversationResponse = {
    conversation_id: number;
    title: string;
    sidekyk: ConversationSidekykSchema;
    last_message: LastMessage;
    share_id: string | null;
    is_public: boolean;
    allow_training: boolean;
    created_at: number | null;
    updated_at: number | null;
};

export type ChangeConversationTitleRequest = {
    conversation_id: number;
    title: string;
};

export type ChangeConversationTitleResponse = {
    title: string;
};

export type PaginationMeta = {
    total_pages: number;
    current_page: number;
    page_size: number;
};

export type GetUsageResponse = {
    sidekyks: UsageField;
    text_messages: UsageField;
};

export type DeleteConversationResponse = {
    conversation_id: number;
};

export type VerifyPasswordResetOTP = {
    code: string;
    email: string;
};

export type ConversationSettings = {
    is_public: boolean;
    allow_training: boolean;
    share_id?: string | null;
};

export type ChangeConversationSettingsRequest = {
    is_public?: boolean | null;
    allow_training?: boolean | null;
};

export type ChangeConversationSettingsResponse = {
    conversation_id: number;
    state: ChangeConversationSettingsRequest | null;
};

export type DeleteAccountRequest = {
    password: string;
    reason: string;
};

export type SendFeedbackRequest = {
    content: string;
    source: 'web' | 'android' | 'ios';
    type: 'feedback' | 'bug_report';
};

export type GetFeedbackResponse = {
    feedback_id: number;
    content: string;
    is_bug_report: boolean;
    acknowledged: boolean;
    created_at: number;
};